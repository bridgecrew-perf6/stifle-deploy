DELIMITER //
CREATE PROCEDURE NACTA_PROSCRIBED_PERSONS_COMPARISION ()
  BEGIN
  DECLARE DATE_INSERTED_CURRENT VARCHAR(100);
  DECLARE DATE_INSERTED_PREVIOUS  VARCHAR(100);
  

	SET @DATE_INSERTED_CURRENT = (SELECT DATE_FORMAT(STR_TO_DATE(DATE_INSERTED, '%Y-%m-%d %H:%i'),'%Y-%m-%d %H:%i')   AS DATE_INSERTED 
				FROM nacta_proscribed_persons
				GROUP BY DATE_FORMAT(STR_TO_DATE(DATE_INSERTED, '%Y-%m-%d %H:%i'),'%Y-%m-%d %H:%i') 
				ORDER BY DATE_INSERTED DESC
				LIMIT 1);

	SET @DATE_INSERTED_PREVIOUS = (SELECT DATE_INSERTED 
				FROM (SELECT DATE_FORMAT(STR_TO_DATE(DATE_INSERTED, '%Y-%m-%d %H:%i'),'%Y-%m-%d %H:%i') AS DATE_INSERTED 
					FROM nacta_proscribed_persons 
					GROUP BY DATE_FORMAT(STR_TO_DATE(DATE_INSERTED, '%Y-%m-%d %H:%i'),'%Y-%m-%d %H:%i') 
					ORDER BY DATE_INSERTED DESC
					LIMIT 2) 
				AS nacta_proscribed_persons 
				ORDER BY DATE_INSERTED ASC 
				LIMIT 1);  
			
	DROP TEMPORARY TABLE IF EXISTS compliance.tmp_nacta_proscribed_persons;
  
	CREATE TEMPORARY TABLE compliance.tmp_nacta_proscribed_persons ( 
		`NAME` VARCHAR(300),
		ALIAS VARCHAR(300),
		FATHER_NAME VARCHAR(300),	
		CNIC VARCHAR(300),
		PROVINCE VARCHAR(300),
		DISTRICT VARCHAR(300),
		DATE_INSERTED VARCHAR(100) 
		);
  
	INSERT INTO compliance.tmp_nacta_proscribed_persons
	SELECT 
	 T1.`NAME`, T1.ALIAS, T1.FATHER_NAME, T1.CNIC, T1.PROVINCE, T1.DISTRICT, T1.DATE_INSERTED
	FROM nacta_proscribed_persons AS T1
		LEFT JOIN nacta_proscribed_persons AS T2 
		ON T1.CNIC = T2.CNIC  
		AND T2.DATE_INSERTED = @DATE_INSERTED_PREVIOUS 
	WHERE T1.DATE_INSERTED = @DATE_INSERTED_CURRENT AND T1.DISCREPANT_CHECK = '0|1|0' OR T1.DISCREPANT_CHECK = '1|1|0' OR T1.DISCREPANT_CHECK = '0|0|0' OR T1.DISCREPANT_CHECK = '1|0|0'
		AND IF(T2.CNIC IS NULL, TRUE, ((T1.`NAME` <> T2.`NAME`) 
		OR (T1.ALIAS <> T2.ALIAS)
		OR (T1.FATHER_NAME <> T2.FATHER_NAME) 
		OR (T1.PROVINCE <> T2.PROVINCE)
		OR (T1.DISTRICT <> T2.DISTRICT)));
		
	DROP TEMPORARY TABLE IF EXISTS compliance.tmp2_NACTA_PROSCRIBED_PERSONS;

	CREATE TEMPORARY TABLE compliance.tmp2_NACTA_PROSCRIBED_PERSONS ( 
		CNIC VARCHAR(100) NOT NULL,
		xmldoc TEXT
		);
		
	INSERT INTO compliance.tmp2_nacta_proscribed_persons
	SELECT
	   l.CNIC,
	   CONCAT('<CNIC DATA_ID="', l.CNIC, '">',
	    (
		SELECT
		    CONCAT('<DATA>',
		    GROUP_CONCAT('<NP="', IFNULL(Name1.PREVIOUS_NAME, 'NULL'), '"/>'  SEPARATOR ''),
		    GROUP_CONCAT('<NC="', IFNULL(Name1.CURRENT_NAME, 'NULL'), '"/>'  SEPARATOR ''),
		    GROUP_CONCAT('<ALIASP="', IFNULL(ALIAS1.PREVIOUS_ALIAS, 'NULL'), '"/>'  SEPARATOR ''),
		    GROUP_CONCAT('<ALIASC="', IFNULL(ALIAS1.CURRENT_ALIAS, 'NULL'), '"/>'  SEPARATOR ''),
		    GROUP_CONCAT('<FATHERNAMEP="', IFNULL(FATHERNAME.PREVIOUS_FATHER_NAME, 'NULL'),  '"/>'  SEPARATOR ''),
		    GROUP_CONCAT('<FATHERNAMEC="', IFNULL(FATHERNAME.CURRENT_FATHER_NAME, 'NULL'), '"/>'  SEPARATOR ''),
		    GROUP_CONCAT('<PROVINCEP="', IFNULL(PROVINCE1.PREVIOUS_PROVINCE, 'NULL'),  '"/>'  SEPARATOR ''),
		    GROUP_CONCAT('<PROVINCEC="', IFNULL(PROVINCE1.CURRENT_PROVINCE, 'NULL'), '"/>'  SEPARATOR ''),
		    GROUP_CONCAT('<DISTRICTP="', IFNULL(DISTRICT1.PREVIOUS_DISTRICT, 'NULL'),  '"/>'  SEPARATOR ''),
		    GROUP_CONCAT('<DISTRICTC="', IFNULL(DISTRICT1.CURRENT_DISTRICT, 'NULL'), '"/>'  SEPARATOR ''),
		    '</DATA>')
	    FROM(
		(SELECT pre.CNIC,
		    pre.`NAME` AS PREVIOUS_NAME,
		    cur.`NAME` AS CURRENT_NAME
		FROM nacta_proscribed_persons pre
		    LEFT JOIN nacta_proscribed_persons cur
		    ON cur.CNIC = pre.CNIC
		    AND cur.DATE_INSERTED = @DATE_INSERTED_CURRENT
		WHERE NOT (pre.`NAME` <=> cur.`NAME`) AND pre.DATE_INSERTED = @DATE_INSERTED_PREVIOUS) AS Name1

		LEFT JOIN (
		SELECT pre.CNIC,
		    pre.ALIAS AS PREVIOUS_ALIAS,
		    cur.ALIAS AS CURRENT_ALIAS
		FROM nacta_proscribed_persons pre
		    LEFT JOIN nacta_proscribed_persons cur
		    ON cur.CNIC = pre.CNIC
		    AND cur.DATE_INSERTED = @DATE_INSERTED_CURRENT
		WHERE NOT (pre.ALIAS <=> cur.ALIAS) AND pre.DATE_INSERTED = @DATE_INSERTED_PREVIOUS) AS ALIAS1
		ON Name1.CNIC = ALIAS1.CNIC 
		    

		LEFT JOIN (
			SELECT pre.CNIC,
			    pre.FATHER_NAME AS PREVIOUS_FATHER_NAME,
			    cur.FATHER_NAME AS CURRENT_FATHER_NAME
			FROM nacta_proscribed_persons pre
			    LEFT JOIN nacta_proscribed_persons cur
			    ON cur.CNIC = pre.CNIC
			    AND cur.DATE_INSERTED = @DATE_INSERTED_CURRENT
			WHERE NOT (pre.FATHER_NAME <=> cur.FATHER_NAME) AND pre.DATE_INSERTED = @DATE_INSERTED_PREVIOUS) AS FATHERNAME
		    ON Name1.CNIC = FATHERNAME.CNIC
		    
		
		  
		LEFT JOIN (
			SELECT pre.CNIC,
			    pre.PROVINCE AS PREVIOUS_PROVINCE,
			    cur.PROVINCE AS CURRENT_PROVINCE
			FROM nacta_proscribed_persons pre
			    LEFT JOIN nacta_proscribed_persons cur
			    ON cur.CNIC = pre.CNIC
			    AND cur.DATE_INSERTED = @DATE_INSERTED_CURRENT
			WHERE NOT (pre.PROVINCE <=> cur.PROVINCE) AND pre.DATE_INSERTED = @DATE_INSERTED_PREVIOUS) AS PROVINCE1
		    ON Name1.CNIC = PROVINCE1.CNIC   
		
		LEFT JOIN (
			SELECT pre.CNIC,
			    pre.DISTRICT AS PREVIOUS_DISTRICT,
			    cur.DISTRICT AS CURRENT_DISTRICT
			FROM nacta_proscribed_persons pre
			    LEFT JOIN nacta_proscribed_persons cur
			    ON cur.CNIC = pre.CNIC
			    AND cur.DATE_INSERTED = @DATE_INSERTED_CURRENT
			WHERE NOT (pre.DISTRICT <=> cur.DISTRICT) AND pre.DATE_INSERTED = @DATE_INSERTED_PREVIOUS) AS DISTRICT1
		    ON Name1.CNIC = DISTRICT1.CNIC
  
			  
	    )     
	    GROUP BY Name1.CNIC
		HAVING Name1.CNIC = l.CNIC
		),
	    '</CNIC>') AS xmldoc
	FROM tmp_nacta_proscribed_persons l;
	
	BEGIN
	UPDATE compliance.nacta_proscribed_persons AS A
	INNER JOIN compliance.tmp2_nacta_proscribed_persons AS B
		ON A.CNIC = B.CNIC
	SET A.xml_col = B.xmldoc	
	WHERE B.xmldoc IS NOT NULL
	AND A.DATE_INSERTED = DATE_FORMAT(STR_TO_DATE(@DATE_INSERTED_CURRENT, '%Y-%m-%d %H:%i'),'%Y-%m-%d %H:%i');
	END;	
  END
  //
DELIMITER ;